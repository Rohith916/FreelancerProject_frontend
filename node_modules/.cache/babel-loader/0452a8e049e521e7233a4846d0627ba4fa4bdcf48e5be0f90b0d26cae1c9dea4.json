{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohith jayin\\\\Desktop\\\\react projects\\\\FreelancerProject-main\\\\FreelancerProject-main\\\\src\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// PrivateRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useUser } from './components/UserContext';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element,\n  ...props\n}) => {\n  _s();\n  const {\n    user\n  } = useUser();\n  if (!user) {\n    alert('User not authenticated. Redirecting to /login');\n    // If not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  if (user.email != \"admin@gmail.com\") {\n    alert('Login with admin account');\n    // If not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, render the provided element or Cart component\n  return element || /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n};\n_s(PrivateRoute, \"Q+JCVIy3JH0MXpFK+vm68eAxsAY=\", false, function () {\n  return [useUser];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","useUser","Dashboard","jsxDEV","_jsxDEV","PrivateRoute","element","props","_s","user","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","$RefreshReg$"],"sources":["C:/Users/Rohith jayin/Desktop/react projects/FreelancerProject-main/FreelancerProject-main/src/PrivateRoute.js"],"sourcesContent":["// PrivateRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useUser } from './components/UserContext';\nimport Dashboard from './components/Dashboard';\nconst PrivateRoute = ({ element, ...props }) => {\n  const { user } = useUser();\n\n  if (!user) {\n   alert('User not authenticated. Redirecting to /login');\n    // If not authenticated, redirect to the login page\n    return <Navigate to=\"/login\" />;\n  }\n  if(user.email!=\"admin@gmail.com\")\n  {\n    alert('Login with admin account');\n    // If not authenticated, redirect to the login page\n    return <Navigate to=\"/login\" />;\n  }\n\n  // If authenticated, render the provided element or Cart component\n  return element || <Dashboard />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE1B,IAAI,CAACQ,IAAI,EAAE;IACVC,KAAK,CAAC,+CAA+C,CAAC;IACrD;IACA,oBAAON,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EACA,IAAGN,IAAI,CAACO,KAAK,IAAE,iBAAiB,EAChC;IACEN,KAAK,CAAC,0BAA0B,CAAC;IACjC;IACA,oBAAON,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,OAAOT,OAAO,iBAAIF,OAAA,CAACF,SAAS;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACP,EAAA,CAjBIH,YAAY;EAAA,QACCJ,OAAO;AAAA;AAAAgB,EAAA,GADpBZ,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}